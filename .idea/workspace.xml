<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="d2641b04-7f2c-4139-91f0-95c7ef448cdf" name="Changes" comment="chore: add stat package">
      <change afterPath="$PROJECT_DIR$/packages/empty-dir/.eslintignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/empty-dir/.npmignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/empty-dir/LICENSE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/empty-dir/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/empty-dir/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/empty-dir/src/async.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/empty-dir/src/empty.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/empty-dir/src/sync.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/empty-dir/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/empty-dir/vite.config.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/make-dir/.eslintignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/make-dir/.eslintrc.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/make-dir/.npmignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/make-dir/LICENSE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/make-dir/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/make-dir/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/make-dir/spec/chmod.test.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/make-dir/spec/clobber.test.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/make-dir/spec/invalid-drive.test.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/make-dir/spec/invalid-path.test.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/make-dir/spec/mkdir.test.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/make-dir/spec/mkdirp.test.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/make-dir/spec/perm.test.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/make-dir/spec/race.test.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/make-dir/spec/relative.test.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/make-dir/spec/root.test.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/make-dir/src/async.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/make-dir/src/check-path.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/make-dir/src/make-dir.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/make-dir/src/sync.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/make-dir/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/make-dir/vite.config.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/remove/.eslintignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/remove/.eslintrc.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/remove/.npmignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/remove/LICENSE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/remove/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/remove/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/remove/spec/index.spec.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/remove/src/async.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/remove/src/fix-windows-eperm.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/remove/src/is-windows.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/remove/src/remove.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/remove/src/rimraf.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/remove/src/rmdir.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/remove/src/rmkids.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/remove/src/sync.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/remove/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/remove/vite.config.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vite.config.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.github/workflows/release.yml" beforeDir="false" afterPath="$PROJECT_DIR$/.github/workflows/release.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/fs.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/fs.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/stat/.eslintrc.cjs" beforeDir="false" afterPath="$PROJECT_DIR$/packages/empty-dir/.eslintrc.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/yarn.lock" beforeDir="false" afterPath="$PROJECT_DIR$/yarn.lock" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ChangesViewManager">
    <option name="groupingKeys">
      <option value="directory" />
    </option>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="TypeScript File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2GtvOe9jDxoJPnRFw3vNecEXmh7" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
    <option name="showMembers" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "TF_FMT": "false",
    "last_opened_file_path": "/Users/mmenendez/Code/hexatool/fs",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "project.structure.last.edited": "Modules",
    "project.structure.proportion": "0.0",
    "project.structure.side.proportion": "0.2",
    "ts.external.directory.path": "/Users/mmenendez/Code/hexatool/fs/node_modules/typescript/lib"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/packages/stat" />
      <recent name="$PROJECT_DIR$/packages/remove" />
      <recent name="$PROJECT_DIR$/packages/make-dir" />
      <recent name="$PROJECT_DIR$/packages/empty-dir" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/packages/stat" />
    </key>
    <key name="es6.move.members.recent.items">
      <recent name="$PROJECT_DIR$/packages/remove/src/is-windows.ts" />
    </key>
  </component>
  <component name="RunManager" selected="npm.test">
    <configuration name="build" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="build" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="test (1)" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/packages/make-dir/package.json" />
      <command value="run" />
      <scripts>
        <script value="test" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="test" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="test" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="npm.test" />
        <item itemvalue="npm.build" />
        <item itemvalue="npm.test (1)" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="chore: initial commit" />
    <MESSAGE value="chore: add stat package" />
    <option name="LAST_COMMIT_MESSAGE" value="chore: add stat package" />
  </component>
</project>