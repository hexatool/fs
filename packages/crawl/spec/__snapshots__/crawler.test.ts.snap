// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`@hexatool/fs-crawl > should crawl custom directory > should crawl custom directory down > should crawl custom directory dirent down > [async] should crawl custom directory dirent down 1`] = `
[
  ExtendedDirent {
    "name": ".eslintignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".eslintrc.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".npmignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "CHANGELOG.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "LICENSE",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "README.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "node_modules",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "package.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "spec",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "src",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "tsconfig.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "vite.config.ts",
    "path": undefined,
    "type": 1,
  },
]
`;

exports[`@hexatool/fs-crawl > should crawl custom directory > should crawl custom directory down > should crawl custom directory dirent down > [iterator] should crawl custom directory dirent down 1`] = `
[
  ExtendedDirent {
    "name": ".eslintignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".eslintrc.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".npmignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "CHANGELOG.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "LICENSE",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "README.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "node_modules",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "package.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "spec",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "src",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "tsconfig.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "vite.config.ts",
    "path": undefined,
    "type": 1,
  },
]
`;

exports[`@hexatool/fs-crawl > should crawl custom directory > should crawl custom directory down > should crawl custom directory dirent down > [stream] should crawl custom directory dirent down 1`] = `
[
  ExtendedDirent {
    "name": ".eslintignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".eslintrc.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".npmignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "CHANGELOG.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "LICENSE",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "README.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "node_modules",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "package.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "spec",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "src",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "tsconfig.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "vite.config.ts",
    "path": undefined,
    "type": 1,
  },
]
`;

exports[`@hexatool/fs-crawl > should crawl custom directory > should crawl custom directory down > should crawl custom directory dirent down > [sync] should crawl custom directory dirent down 1`] = `
[
  ExtendedDirent {
    "name": ".eslintignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".eslintrc.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".npmignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "CHANGELOG.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "LICENSE",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "README.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "node_modules",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "package.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "spec",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "src",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "tsconfig.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "vite.config.ts",
    "path": undefined,
    "type": 1,
  },
]
`;

exports[`@hexatool/fs-crawl > should crawl custom directory > should crawl custom directory down > should crawl custom directory string down > [async] should crawl custom directory string down 1`] = `
[
  ".eslintignore",
  ".eslintrc.json",
  ".npmignore",
  "CHANGELOG.md",
  "LICENSE",
  "README.md",
  "node_modules",
  "package.json",
  "spec",
  "src",
  "tsconfig.json",
  "vite.config.ts",
]
`;

exports[`@hexatool/fs-crawl > should crawl custom directory > should crawl custom directory down > should crawl custom directory string down > [iterator] should crawl custom directory string down 1`] = `
[
  ".eslintignore",
  ".eslintrc.json",
  ".npmignore",
  "CHANGELOG.md",
  "LICENSE",
  "README.md",
  "node_modules",
  "package.json",
  "spec",
  "src",
  "tsconfig.json",
  "vite.config.ts",
]
`;

exports[`@hexatool/fs-crawl > should crawl custom directory > should crawl custom directory down > should crawl custom directory string down > [stream] should crawl custom directory string down 1`] = `
[
  ".eslintignore",
  ".eslintrc.json",
  ".npmignore",
  "CHANGELOG.md",
  "LICENSE",
  "README.md",
  "node_modules",
  "package.json",
  "spec",
  "src",
  "tsconfig.json",
  "vite.config.ts",
]
`;

exports[`@hexatool/fs-crawl > should crawl custom directory > should crawl custom directory down > should crawl custom directory string down > [sync] should crawl custom directory string down 1`] = `
[
  ".eslintignore",
  ".eslintrc.json",
  ".npmignore",
  "CHANGELOG.md",
  "LICENSE",
  "README.md",
  "node_modules",
  "package.json",
  "spec",
  "src",
  "tsconfig.json",
  "vite.config.ts",
]
`;

exports[`@hexatool/fs-crawl > should exclude all directories > should exclude all directories down > should exclude all directories dirent down > [async] should exclude all directories dirent down 1`] = `
[
  ExtendedDirent {
    "name": ".eslintignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".eslintrc.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".npmignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "CHANGELOG.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "LICENSE",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "README.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "package.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "tsconfig.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "vite.config.ts",
    "path": undefined,
    "type": 1,
  },
]
`;

exports[`@hexatool/fs-crawl > should exclude all directories > should exclude all directories down > should exclude all directories dirent down > [iterator] should exclude all directories dirent down 1`] = `
[
  ExtendedDirent {
    "name": ".eslintignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".eslintrc.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".npmignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "CHANGELOG.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "LICENSE",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "README.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "package.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "tsconfig.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "vite.config.ts",
    "path": undefined,
    "type": 1,
  },
]
`;

exports[`@hexatool/fs-crawl > should exclude all directories > should exclude all directories down > should exclude all directories dirent down > [stream] should exclude all directories dirent down 1`] = `
[
  ExtendedDirent {
    "name": ".eslintignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".eslintrc.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".npmignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "CHANGELOG.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "LICENSE",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "README.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "package.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "tsconfig.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "vite.config.ts",
    "path": undefined,
    "type": 1,
  },
]
`;

exports[`@hexatool/fs-crawl > should exclude all directories > should exclude all directories down > should exclude all directories dirent down > [sync] should exclude all directories dirent down 1`] = `
[
  ExtendedDirent {
    "name": ".eslintignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".eslintrc.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".npmignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "CHANGELOG.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "LICENSE",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "README.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "package.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "tsconfig.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "vite.config.ts",
    "path": undefined,
    "type": 1,
  },
]
`;

exports[`@hexatool/fs-crawl > should exclude all directories > should exclude all directories down > should exclude all directories string down > [async] should exclude all directories string down 1`] = `
[
  ".eslintignore",
  ".eslintrc.json",
  ".npmignore",
  "CHANGELOG.md",
  "LICENSE",
  "README.md",
  "package.json",
  "tsconfig.json",
  "vite.config.ts",
]
`;

exports[`@hexatool/fs-crawl > should exclude all directories > should exclude all directories down > should exclude all directories string down > [iterator] should exclude all directories string down 1`] = `
[
  ".eslintignore",
  ".eslintrc.json",
  ".npmignore",
  "CHANGELOG.md",
  "LICENSE",
  "README.md",
  "package.json",
  "tsconfig.json",
  "vite.config.ts",
]
`;

exports[`@hexatool/fs-crawl > should exclude all directories > should exclude all directories down > should exclude all directories string down > [stream] should exclude all directories string down 1`] = `
[
  ".eslintignore",
  ".eslintrc.json",
  ".npmignore",
  "CHANGELOG.md",
  "LICENSE",
  "README.md",
  "package.json",
  "tsconfig.json",
  "vite.config.ts",
]
`;

exports[`@hexatool/fs-crawl > should exclude all directories > should exclude all directories down > should exclude all directories string down > [sync] should exclude all directories string down 1`] = `
[
  ".eslintignore",
  ".eslintrc.json",
  ".npmignore",
  "CHANGELOG.md",
  "LICENSE",
  "README.md",
  "package.json",
  "tsconfig.json",
  "vite.config.ts",
]
`;

exports[`@hexatool/fs-crawl > should exclude all files > should exclude all files down > should exclude all files dirent down > [async] should exclude all files dirent down 1`] = `
[
  ExtendedDirent {
    "name": "node_modules",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "spec",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "src",
    "path": undefined,
    "type": 2,
  },
]
`;

exports[`@hexatool/fs-crawl > should exclude all files > should exclude all files down > should exclude all files dirent down > [iterator] should exclude all files dirent down 1`] = `
[
  ExtendedDirent {
    "name": "node_modules",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "spec",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "src",
    "path": undefined,
    "type": 2,
  },
]
`;

exports[`@hexatool/fs-crawl > should exclude all files > should exclude all files down > should exclude all files dirent down > [stream] should exclude all files dirent down 1`] = `
[
  ExtendedDirent {
    "name": "node_modules",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "spec",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "src",
    "path": undefined,
    "type": 2,
  },
]
`;

exports[`@hexatool/fs-crawl > should exclude all files > should exclude all files down > should exclude all files dirent down > [sync] should exclude all files dirent down 1`] = `
[
  ExtendedDirent {
    "name": "node_modules",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "spec",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "src",
    "path": undefined,
    "type": 2,
  },
]
`;

exports[`@hexatool/fs-crawl > should exclude all files > should exclude all files down > should exclude all files string down > [async] should exclude all files string down 1`] = `
[
  "node_modules",
  "spec",
  "src",
]
`;

exports[`@hexatool/fs-crawl > should exclude all files > should exclude all files down > should exclude all files string down > [iterator] should exclude all files string down 1`] = `
[
  "node_modules",
  "spec",
  "src",
]
`;

exports[`@hexatool/fs-crawl > should exclude all files > should exclude all files down > should exclude all files string down > [stream] should exclude all files string down 1`] = `
[
  "node_modules",
  "spec",
  "src",
]
`;

exports[`@hexatool/fs-crawl > should exclude all files > should exclude all files down > should exclude all files string down > [sync] should exclude all files string down 1`] = `
[
  "node_modules",
  "spec",
  "src",
]
`;

exports[`@hexatool/fs-crawl > should exclude all folder and files > should exclude all folder and files down > should exclude all folder and files dirent down > [async] should exclude all folder and files dirent down 1`] = `[]`;

exports[`@hexatool/fs-crawl > should exclude all folder and files > should exclude all folder and files down > should exclude all folder and files dirent down > [iterator] should exclude all folder and files dirent down 1`] = `[]`;

exports[`@hexatool/fs-crawl > should exclude all folder and files > should exclude all folder and files down > should exclude all folder and files dirent down > [stream] should exclude all folder and files dirent down 1`] = `[]`;

exports[`@hexatool/fs-crawl > should exclude all folder and files > should exclude all folder and files down > should exclude all folder and files dirent down > [sync] should exclude all folder and files dirent down 1`] = `[]`;

exports[`@hexatool/fs-crawl > should exclude all folder and files > should exclude all folder and files down > should exclude all folder and files string down > [async] should exclude all folder and files string down 1`] = `[]`;

exports[`@hexatool/fs-crawl > should exclude all folder and files > should exclude all folder and files down > should exclude all folder and files string down > [iterator] should exclude all folder and files string down 1`] = `[]`;

exports[`@hexatool/fs-crawl > should exclude all folder and files > should exclude all folder and files down > should exclude all folder and files string down > [stream] should exclude all folder and files string down 1`] = `[]`;

exports[`@hexatool/fs-crawl > should exclude all folder and files > should exclude all folder and files down > should exclude all folder and files string down > [sync] should exclude all folder and files string down 1`] = `[]`;

exports[`@hexatool/fs-crawl > should exclude directories > should exclude directories down > should exclude directories dirent down > [async] should exclude directories dirent down 1`] = `
[
  ExtendedDirent {
    "name": ".eslintignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".eslintrc.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".npmignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "CHANGELOG.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "LICENSE",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "README.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "package.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "spec",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "src",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "tsconfig.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "vite.config.ts",
    "path": undefined,
    "type": 1,
  },
]
`;

exports[`@hexatool/fs-crawl > should exclude directories > should exclude directories down > should exclude directories dirent down > [iterator] should exclude directories dirent down 1`] = `
[
  ExtendedDirent {
    "name": ".eslintignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".eslintrc.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".npmignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "CHANGELOG.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "LICENSE",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "README.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "package.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "spec",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "src",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "tsconfig.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "vite.config.ts",
    "path": undefined,
    "type": 1,
  },
]
`;

exports[`@hexatool/fs-crawl > should exclude directories > should exclude directories down > should exclude directories dirent down > [stream] should exclude directories dirent down 1`] = `
[
  ExtendedDirent {
    "name": ".eslintignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".eslintrc.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".npmignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "CHANGELOG.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "LICENSE",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "README.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "package.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "spec",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "src",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "tsconfig.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "vite.config.ts",
    "path": undefined,
    "type": 1,
  },
]
`;

exports[`@hexatool/fs-crawl > should exclude directories > should exclude directories down > should exclude directories dirent down > [sync] should exclude directories dirent down 1`] = `
[
  ExtendedDirent {
    "name": ".eslintignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".eslintrc.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".npmignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "CHANGELOG.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "LICENSE",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "README.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "package.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "spec",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "src",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "tsconfig.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "vite.config.ts",
    "path": undefined,
    "type": 1,
  },
]
`;

exports[`@hexatool/fs-crawl > should exclude directories > should exclude directories down > should exclude directories string down > [async] should exclude directories string down 1`] = `
[
  ".eslintignore",
  ".eslintrc.json",
  ".npmignore",
  "CHANGELOG.md",
  "LICENSE",
  "README.md",
  "package.json",
  "spec",
  "src",
  "tsconfig.json",
  "vite.config.ts",
]
`;

exports[`@hexatool/fs-crawl > should exclude directories > should exclude directories down > should exclude directories string down > [iterator] should exclude directories string down 1`] = `
[
  ".eslintignore",
  ".eslintrc.json",
  ".npmignore",
  "CHANGELOG.md",
  "LICENSE",
  "README.md",
  "package.json",
  "spec",
  "src",
  "tsconfig.json",
  "vite.config.ts",
]
`;

exports[`@hexatool/fs-crawl > should exclude directories > should exclude directories down > should exclude directories string down > [stream] should exclude directories string down 1`] = `
[
  ".eslintignore",
  ".eslintrc.json",
  ".npmignore",
  "CHANGELOG.md",
  "LICENSE",
  "README.md",
  "package.json",
  "spec",
  "src",
  "tsconfig.json",
  "vite.config.ts",
]
`;

exports[`@hexatool/fs-crawl > should exclude directories > should exclude directories down > should exclude directories string down > [sync] should exclude directories string down 1`] = `
[
  ".eslintignore",
  ".eslintrc.json",
  ".npmignore",
  "CHANGELOG.md",
  "LICENSE",
  "README.md",
  "package.json",
  "spec",
  "src",
  "tsconfig.json",
  "vite.config.ts",
]
`;

exports[`@hexatool/fs-crawl > should exclude files > should exclude files down > should exclude files dirent down > [async] should exclude files dirent down 1`] = `
[
  ExtendedDirent {
    "name": ".eslintignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".eslintrc.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".npmignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "CHANGELOG.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "LICENSE",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "README.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "node_modules",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "package.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "spec",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "src",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "tsconfig.json",
    "path": undefined,
    "type": 1,
  },
]
`;

exports[`@hexatool/fs-crawl > should exclude files > should exclude files down > should exclude files dirent down > [iterator] should exclude files dirent down 1`] = `
[
  ExtendedDirent {
    "name": ".eslintignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".eslintrc.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".npmignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "CHANGELOG.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "LICENSE",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "README.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "node_modules",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "package.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "spec",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "src",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "tsconfig.json",
    "path": undefined,
    "type": 1,
  },
]
`;

exports[`@hexatool/fs-crawl > should exclude files > should exclude files down > should exclude files dirent down > [stream] should exclude files dirent down 1`] = `
[
  ExtendedDirent {
    "name": ".eslintignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".eslintrc.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".npmignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "CHANGELOG.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "LICENSE",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "README.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "node_modules",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "package.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "spec",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "src",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "tsconfig.json",
    "path": undefined,
    "type": 1,
  },
]
`;

exports[`@hexatool/fs-crawl > should exclude files > should exclude files down > should exclude files dirent down > [sync] should exclude files dirent down 1`] = `
[
  ExtendedDirent {
    "name": ".eslintignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".eslintrc.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".npmignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "CHANGELOG.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "LICENSE",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "README.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "node_modules",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "package.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "spec",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "src",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "tsconfig.json",
    "path": undefined,
    "type": 1,
  },
]
`;

exports[`@hexatool/fs-crawl > should exclude files > should exclude files down > should exclude files string down > [async] should exclude files string down 1`] = `
[
  ".eslintignore",
  ".eslintrc.json",
  ".npmignore",
  "CHANGELOG.md",
  "LICENSE",
  "README.md",
  "node_modules",
  "package.json",
  "spec",
  "src",
  "tsconfig.json",
]
`;

exports[`@hexatool/fs-crawl > should exclude files > should exclude files down > should exclude files string down > [iterator] should exclude files string down 1`] = `
[
  ".eslintignore",
  ".eslintrc.json",
  ".npmignore",
  "CHANGELOG.md",
  "LICENSE",
  "README.md",
  "node_modules",
  "package.json",
  "spec",
  "src",
  "tsconfig.json",
]
`;

exports[`@hexatool/fs-crawl > should exclude files > should exclude files down > should exclude files string down > [stream] should exclude files string down 1`] = `
[
  ".eslintignore",
  ".eslintrc.json",
  ".npmignore",
  "CHANGELOG.md",
  "LICENSE",
  "README.md",
  "node_modules",
  "package.json",
  "spec",
  "src",
  "tsconfig.json",
]
`;

exports[`@hexatool/fs-crawl > should exclude files > should exclude files down > should exclude files string down > [sync] should exclude files string down 1`] = `
[
  ".eslintignore",
  ".eslintrc.json",
  ".npmignore",
  "CHANGELOG.md",
  "LICENSE",
  "README.md",
  "node_modules",
  "package.json",
  "spec",
  "src",
  "tsconfig.json",
]
`;

exports[`@hexatool/fs-crawl > should exclude folder and files > should exclude folder and files down > should exclude folder and files dirent down > [async] should exclude folder and files dirent down 1`] = `
[
  ExtendedDirent {
    "name": ".eslintignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".eslintrc.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".npmignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "CHANGELOG.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "LICENSE",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "README.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "node_modules",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "package.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "spec",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "tsconfig.json",
    "path": undefined,
    "type": 1,
  },
]
`;

exports[`@hexatool/fs-crawl > should exclude folder and files > should exclude folder and files down > should exclude folder and files dirent down > [iterator] should exclude folder and files dirent down 1`] = `
[
  ExtendedDirent {
    "name": ".eslintignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".eslintrc.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".npmignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "CHANGELOG.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "LICENSE",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "README.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "node_modules",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "package.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "spec",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "tsconfig.json",
    "path": undefined,
    "type": 1,
  },
]
`;

exports[`@hexatool/fs-crawl > should exclude folder and files > should exclude folder and files down > should exclude folder and files dirent down > [stream] should exclude folder and files dirent down 1`] = `
[
  ExtendedDirent {
    "name": ".eslintignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".eslintrc.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".npmignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "CHANGELOG.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "LICENSE",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "README.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "node_modules",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "package.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "spec",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "tsconfig.json",
    "path": undefined,
    "type": 1,
  },
]
`;

exports[`@hexatool/fs-crawl > should exclude folder and files > should exclude folder and files down > should exclude folder and files dirent down > [sync] should exclude folder and files dirent down 1`] = `
[
  ExtendedDirent {
    "name": ".eslintignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".eslintrc.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".npmignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "CHANGELOG.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "LICENSE",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "README.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "node_modules",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "package.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "spec",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "tsconfig.json",
    "path": undefined,
    "type": 1,
  },
]
`;

exports[`@hexatool/fs-crawl > should exclude folder and files > should exclude folder and files down > should exclude folder and files string down > [async] should exclude folder and files string down 1`] = `
[
  ".eslintignore",
  ".eslintrc.json",
  ".npmignore",
  "CHANGELOG.md",
  "LICENSE",
  "README.md",
  "node_modules",
  "package.json",
  "spec",
  "tsconfig.json",
]
`;

exports[`@hexatool/fs-crawl > should exclude folder and files > should exclude folder and files down > should exclude folder and files string down > [iterator] should exclude folder and files string down 1`] = `
[
  ".eslintignore",
  ".eslintrc.json",
  ".npmignore",
  "CHANGELOG.md",
  "LICENSE",
  "README.md",
  "node_modules",
  "package.json",
  "spec",
  "tsconfig.json",
]
`;

exports[`@hexatool/fs-crawl > should exclude folder and files > should exclude folder and files down > should exclude folder and files string down > [stream] should exclude folder and files string down 1`] = `
[
  ".eslintignore",
  ".eslintrc.json",
  ".npmignore",
  "CHANGELOG.md",
  "LICENSE",
  "README.md",
  "node_modules",
  "package.json",
  "spec",
  "tsconfig.json",
]
`;

exports[`@hexatool/fs-crawl > should exclude folder and files > should exclude folder and files down > should exclude folder and files string down > [sync] should exclude folder and files string down 1`] = `
[
  ".eslintignore",
  ".eslintrc.json",
  ".npmignore",
  "CHANGELOG.md",
  "LICENSE",
  "README.md",
  "node_modules",
  "package.json",
  "spec",
  "tsconfig.json",
]
`;

exports[`@hexatool/fs-crawl > should exclude folder with RegExp returning false > should exclude folder with RegExp returning false down > should exclude folder with RegExp returning false dirent down > [async] should exclude folder with RegExp returning false dirent down 1`] = `
[
  ExtendedDirent {
    "name": ".eslintignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".eslintrc.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".npmignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "CHANGELOG.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "LICENSE",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "README.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "node_modules",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "package.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "spec",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "src",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "tsconfig.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "vite.config.ts",
    "path": undefined,
    "type": 1,
  },
]
`;

exports[`@hexatool/fs-crawl > should exclude folder with RegExp returning false > should exclude folder with RegExp returning false down > should exclude folder with RegExp returning false dirent down > [iterator] should exclude folder with RegExp returning false dirent down 1`] = `
[
  ExtendedDirent {
    "name": ".eslintignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".eslintrc.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".npmignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "CHANGELOG.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "LICENSE",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "README.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "node_modules",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "package.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "spec",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "src",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "tsconfig.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "vite.config.ts",
    "path": undefined,
    "type": 1,
  },
]
`;

exports[`@hexatool/fs-crawl > should exclude folder with RegExp returning false > should exclude folder with RegExp returning false down > should exclude folder with RegExp returning false dirent down > [stream] should exclude folder with RegExp returning false dirent down 1`] = `
[
  ExtendedDirent {
    "name": ".eslintignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".eslintrc.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".npmignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "CHANGELOG.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "LICENSE",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "README.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "node_modules",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "package.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "spec",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "src",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "tsconfig.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "vite.config.ts",
    "path": undefined,
    "type": 1,
  },
]
`;

exports[`@hexatool/fs-crawl > should exclude folder with RegExp returning false > should exclude folder with RegExp returning false down > should exclude folder with RegExp returning false dirent down > [sync] should exclude folder with RegExp returning false dirent down 1`] = `
[
  ExtendedDirent {
    "name": ".eslintignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".eslintrc.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".npmignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "CHANGELOG.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "LICENSE",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "README.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "node_modules",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "package.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "spec",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "src",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "tsconfig.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "vite.config.ts",
    "path": undefined,
    "type": 1,
  },
]
`;

exports[`@hexatool/fs-crawl > should exclude folder with RegExp returning false > should exclude folder with RegExp returning false down > should exclude folder with RegExp returning false string down > [async] should exclude folder with RegExp returning false string down 1`] = `
[
  ".eslintignore",
  ".eslintrc.json",
  ".npmignore",
  "CHANGELOG.md",
  "LICENSE",
  "README.md",
  "node_modules",
  "package.json",
  "spec",
  "src",
  "tsconfig.json",
  "vite.config.ts",
]
`;

exports[`@hexatool/fs-crawl > should exclude folder with RegExp returning false > should exclude folder with RegExp returning false down > should exclude folder with RegExp returning false string down > [iterator] should exclude folder with RegExp returning false string down 1`] = `
[
  ".eslintignore",
  ".eslintrc.json",
  ".npmignore",
  "CHANGELOG.md",
  "LICENSE",
  "README.md",
  "node_modules",
  "package.json",
  "spec",
  "src",
  "tsconfig.json",
  "vite.config.ts",
]
`;

exports[`@hexatool/fs-crawl > should exclude folder with RegExp returning false > should exclude folder with RegExp returning false down > should exclude folder with RegExp returning false string down > [stream] should exclude folder with RegExp returning false string down 1`] = `
[
  ".eslintignore",
  ".eslintrc.json",
  ".npmignore",
  "CHANGELOG.md",
  "LICENSE",
  "README.md",
  "node_modules",
  "package.json",
  "spec",
  "src",
  "tsconfig.json",
  "vite.config.ts",
]
`;

exports[`@hexatool/fs-crawl > should exclude folder with RegExp returning false > should exclude folder with RegExp returning false down > should exclude folder with RegExp returning false string down > [sync] should exclude folder with RegExp returning false string down 1`] = `
[
  ".eslintignore",
  ".eslintrc.json",
  ".npmignore",
  "CHANGELOG.md",
  "LICENSE",
  "README.md",
  "node_modules",
  "package.json",
  "spec",
  "src",
  "tsconfig.json",
  "vite.config.ts",
]
`;

exports[`@hexatool/fs-crawl > should exclude folder with RegExp returning true > should exclude folder with RegExp returning true down > should exclude folder with RegExp returning true dirent down > [async] should exclude folder with RegExp returning true dirent down 1`] = `[]`;

exports[`@hexatool/fs-crawl > should exclude folder with RegExp returning true > should exclude folder with RegExp returning true down > should exclude folder with RegExp returning true dirent down > [iterator] should exclude folder with RegExp returning true dirent down 1`] = `[]`;

exports[`@hexatool/fs-crawl > should exclude folder with RegExp returning true > should exclude folder with RegExp returning true down > should exclude folder with RegExp returning true dirent down > [stream] should exclude folder with RegExp returning true dirent down 1`] = `[]`;

exports[`@hexatool/fs-crawl > should exclude folder with RegExp returning true > should exclude folder with RegExp returning true down > should exclude folder with RegExp returning true dirent down > [sync] should exclude folder with RegExp returning true dirent down 1`] = `[]`;

exports[`@hexatool/fs-crawl > should exclude folder with RegExp returning true > should exclude folder with RegExp returning true down > should exclude folder with RegExp returning true string down > [async] should exclude folder with RegExp returning true string down 1`] = `[]`;

exports[`@hexatool/fs-crawl > should exclude folder with RegExp returning true > should exclude folder with RegExp returning true down > should exclude folder with RegExp returning true string down > [iterator] should exclude folder with RegExp returning true string down 1`] = `[]`;

exports[`@hexatool/fs-crawl > should exclude folder with RegExp returning true > should exclude folder with RegExp returning true down > should exclude folder with RegExp returning true string down > [stream] should exclude folder with RegExp returning true string down 1`] = `[]`;

exports[`@hexatool/fs-crawl > should exclude folder with RegExp returning true > should exclude folder with RegExp returning true down > should exclude folder with RegExp returning true string down > [sync] should exclude folder with RegExp returning true string down 1`] = `[]`;

exports[`@hexatool/fs-crawl > should exclude folder with fn returning false > should exclude folder with fn returning false down > should exclude folder with fn returning false dirent down > [async] should exclude folder with fn returning false dirent down 1`] = `
[
  ExtendedDirent {
    "name": ".eslintignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".eslintrc.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".npmignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "CHANGELOG.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "LICENSE",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "README.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "node_modules",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "package.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "spec",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "src",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "tsconfig.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "vite.config.ts",
    "path": undefined,
    "type": 1,
  },
]
`;

exports[`@hexatool/fs-crawl > should exclude folder with fn returning false > should exclude folder with fn returning false down > should exclude folder with fn returning false dirent down > [iterator] should exclude folder with fn returning false dirent down 1`] = `
[
  ExtendedDirent {
    "name": ".eslintignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".eslintrc.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".npmignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "CHANGELOG.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "LICENSE",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "README.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "node_modules",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "package.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "spec",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "src",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "tsconfig.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "vite.config.ts",
    "path": undefined,
    "type": 1,
  },
]
`;

exports[`@hexatool/fs-crawl > should exclude folder with fn returning false > should exclude folder with fn returning false down > should exclude folder with fn returning false dirent down > [stream] should exclude folder with fn returning false dirent down 1`] = `
[
  ExtendedDirent {
    "name": ".eslintignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".eslintrc.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".npmignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "CHANGELOG.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "LICENSE",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "README.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "node_modules",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "package.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "spec",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "src",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "tsconfig.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "vite.config.ts",
    "path": undefined,
    "type": 1,
  },
]
`;

exports[`@hexatool/fs-crawl > should exclude folder with fn returning false > should exclude folder with fn returning false down > should exclude folder with fn returning false dirent down > [sync] should exclude folder with fn returning false dirent down 1`] = `
[
  ExtendedDirent {
    "name": ".eslintignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".eslintrc.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".npmignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "CHANGELOG.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "LICENSE",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "README.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "node_modules",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "package.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "spec",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "src",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "tsconfig.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "vite.config.ts",
    "path": undefined,
    "type": 1,
  },
]
`;

exports[`@hexatool/fs-crawl > should exclude folder with fn returning false > should exclude folder with fn returning false down > should exclude folder with fn returning false string down > [async] should exclude folder with fn returning false string down 1`] = `
[
  ".eslintignore",
  ".eslintrc.json",
  ".npmignore",
  "CHANGELOG.md",
  "LICENSE",
  "README.md",
  "node_modules",
  "package.json",
  "spec",
  "src",
  "tsconfig.json",
  "vite.config.ts",
]
`;

exports[`@hexatool/fs-crawl > should exclude folder with fn returning false > should exclude folder with fn returning false down > should exclude folder with fn returning false string down > [iterator] should exclude folder with fn returning false string down 1`] = `
[
  ".eslintignore",
  ".eslintrc.json",
  ".npmignore",
  "CHANGELOG.md",
  "LICENSE",
  "README.md",
  "node_modules",
  "package.json",
  "spec",
  "src",
  "tsconfig.json",
  "vite.config.ts",
]
`;

exports[`@hexatool/fs-crawl > should exclude folder with fn returning false > should exclude folder with fn returning false down > should exclude folder with fn returning false string down > [stream] should exclude folder with fn returning false string down 1`] = `
[
  ".eslintignore",
  ".eslintrc.json",
  ".npmignore",
  "CHANGELOG.md",
  "LICENSE",
  "README.md",
  "node_modules",
  "package.json",
  "spec",
  "src",
  "tsconfig.json",
  "vite.config.ts",
]
`;

exports[`@hexatool/fs-crawl > should exclude folder with fn returning false > should exclude folder with fn returning false down > should exclude folder with fn returning false string down > [sync] should exclude folder with fn returning false string down 1`] = `
[
  ".eslintignore",
  ".eslintrc.json",
  ".npmignore",
  "CHANGELOG.md",
  "LICENSE",
  "README.md",
  "node_modules",
  "package.json",
  "spec",
  "src",
  "tsconfig.json",
  "vite.config.ts",
]
`;

exports[`@hexatool/fs-crawl > should exclude folder with fn returning true > should exclude folder with fn returning true down > should exclude folder with fn returning true dirent down > [async] should exclude folder with fn returning true dirent down 1`] = `[]`;

exports[`@hexatool/fs-crawl > should exclude folder with fn returning true > should exclude folder with fn returning true down > should exclude folder with fn returning true dirent down > [iterator] should exclude folder with fn returning true dirent down 1`] = `[]`;

exports[`@hexatool/fs-crawl > should exclude folder with fn returning true > should exclude folder with fn returning true down > should exclude folder with fn returning true dirent down > [stream] should exclude folder with fn returning true dirent down 1`] = `[]`;

exports[`@hexatool/fs-crawl > should exclude folder with fn returning true > should exclude folder with fn returning true down > should exclude folder with fn returning true dirent down > [sync] should exclude folder with fn returning true dirent down 1`] = `[]`;

exports[`@hexatool/fs-crawl > should exclude folder with fn returning true > should exclude folder with fn returning true down > should exclude folder with fn returning true string down > [async] should exclude folder with fn returning true string down 1`] = `[]`;

exports[`@hexatool/fs-crawl > should exclude folder with fn returning true > should exclude folder with fn returning true down > should exclude folder with fn returning true string down > [iterator] should exclude folder with fn returning true string down 1`] = `[]`;

exports[`@hexatool/fs-crawl > should exclude folder with fn returning true > should exclude folder with fn returning true down > should exclude folder with fn returning true string down > [stream] should exclude folder with fn returning true string down 1`] = `[]`;

exports[`@hexatool/fs-crawl > should exclude folder with fn returning true > should exclude folder with fn returning true down > should exclude folder with fn returning true string down > [sync] should exclude folder with fn returning true string down 1`] = `[]`;

exports[`@hexatool/fs-crawl > should exclude folder with string returning false > should exclude folder with string returning false down > should exclude folder with string returning false dirent down > [async] should exclude folder with string returning false dirent down 1`] = `
[
  ExtendedDirent {
    "name": ".eslintignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".eslintrc.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".npmignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "CHANGELOG.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "LICENSE",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "README.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "node_modules",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "package.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "spec",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "src",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "tsconfig.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "vite.config.ts",
    "path": undefined,
    "type": 1,
  },
]
`;

exports[`@hexatool/fs-crawl > should exclude folder with string returning false > should exclude folder with string returning false down > should exclude folder with string returning false dirent down > [iterator] should exclude folder with string returning false dirent down 1`] = `
[
  ExtendedDirent {
    "name": ".eslintignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".eslintrc.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".npmignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "CHANGELOG.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "LICENSE",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "README.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "node_modules",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "package.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "spec",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "src",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "tsconfig.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "vite.config.ts",
    "path": undefined,
    "type": 1,
  },
]
`;

exports[`@hexatool/fs-crawl > should exclude folder with string returning false > should exclude folder with string returning false down > should exclude folder with string returning false dirent down > [stream] should exclude folder with string returning false dirent down 1`] = `
[
  ExtendedDirent {
    "name": ".eslintignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".eslintrc.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".npmignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "CHANGELOG.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "LICENSE",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "README.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "node_modules",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "package.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "spec",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "src",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "tsconfig.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "vite.config.ts",
    "path": undefined,
    "type": 1,
  },
]
`;

exports[`@hexatool/fs-crawl > should exclude folder with string returning false > should exclude folder with string returning false down > should exclude folder with string returning false dirent down > [sync] should exclude folder with string returning false dirent down 1`] = `
[
  ExtendedDirent {
    "name": ".eslintignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".eslintrc.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": ".npmignore",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "CHANGELOG.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "LICENSE",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "README.md",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "node_modules",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "package.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "spec",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "src",
    "path": undefined,
    "type": 2,
  },
  ExtendedDirent {
    "name": "tsconfig.json",
    "path": undefined,
    "type": 1,
  },
  ExtendedDirent {
    "name": "vite.config.ts",
    "path": undefined,
    "type": 1,
  },
]
`;

exports[`@hexatool/fs-crawl > should exclude folder with string returning false > should exclude folder with string returning false down > should exclude folder with string returning false string down > [async] should exclude folder with string returning false string down 1`] = `
[
  ".eslintignore",
  ".eslintrc.json",
  ".npmignore",
  "CHANGELOG.md",
  "LICENSE",
  "README.md",
  "node_modules",
  "package.json",
  "spec",
  "src",
  "tsconfig.json",
  "vite.config.ts",
]
`;

exports[`@hexatool/fs-crawl > should exclude folder with string returning false > should exclude folder with string returning false down > should exclude folder with string returning false string down > [iterator] should exclude folder with string returning false string down 1`] = `
[
  ".eslintignore",
  ".eslintrc.json",
  ".npmignore",
  "CHANGELOG.md",
  "LICENSE",
  "README.md",
  "node_modules",
  "package.json",
  "spec",
  "src",
  "tsconfig.json",
  "vite.config.ts",
]
`;

exports[`@hexatool/fs-crawl > should exclude folder with string returning false > should exclude folder with string returning false down > should exclude folder with string returning false string down > [stream] should exclude folder with string returning false string down 1`] = `
[
  ".eslintignore",
  ".eslintrc.json",
  ".npmignore",
  "CHANGELOG.md",
  "LICENSE",
  "README.md",
  "node_modules",
  "package.json",
  "spec",
  "src",
  "tsconfig.json",
  "vite.config.ts",
]
`;

exports[`@hexatool/fs-crawl > should exclude folder with string returning false > should exclude folder with string returning false down > should exclude folder with string returning false string down > [sync] should exclude folder with string returning false string down 1`] = `
[
  ".eslintignore",
  ".eslintrc.json",
  ".npmignore",
  "CHANGELOG.md",
  "LICENSE",
  "README.md",
  "node_modules",
  "package.json",
  "spec",
  "src",
  "tsconfig.json",
  "vite.config.ts",
]
`;

exports[`@hexatool/fs-crawl > should exclude folder with string returning true > should exclude folder with string returning true down > should exclude folder with string returning true dirent down > [async] should exclude folder with string returning true dirent down 1`] = `[]`;

exports[`@hexatool/fs-crawl > should exclude folder with string returning true > should exclude folder with string returning true down > should exclude folder with string returning true dirent down > [iterator] should exclude folder with string returning true dirent down 1`] = `[]`;

exports[`@hexatool/fs-crawl > should exclude folder with string returning true > should exclude folder with string returning true down > should exclude folder with string returning true dirent down > [stream] should exclude folder with string returning true dirent down 1`] = `[]`;

exports[`@hexatool/fs-crawl > should exclude folder with string returning true > should exclude folder with string returning true down > should exclude folder with string returning true dirent down > [sync] should exclude folder with string returning true dirent down 1`] = `[]`;

exports[`@hexatool/fs-crawl > should exclude folder with string returning true > should exclude folder with string returning true down > should exclude folder with string returning true string down > [async] should exclude folder with string returning true string down 1`] = `[]`;

exports[`@hexatool/fs-crawl > should exclude folder with string returning true > should exclude folder with string returning true down > should exclude folder with string returning true string down > [iterator] should exclude folder with string returning true string down 1`] = `[]`;

exports[`@hexatool/fs-crawl > should exclude folder with string returning true > should exclude folder with string returning true down > should exclude folder with string returning true string down > [stream] should exclude folder with string returning true string down 1`] = `[]`;

exports[`@hexatool/fs-crawl > should exclude folder with string returning true > should exclude folder with string returning true down > should exclude folder with string returning true string down > [sync] should exclude folder with string returning true string down 1`] = `[]`;
